{"cveId": "CVE-2021-41275", "cwe": ["CWE-352", "CWE-352", "CWE-352", "CWE-352"], "cvss": [{"baseScore": "9.3", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "Required", "Scope": "Complete", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://github.com/spree/spree_auth_devise/security/advisories/GHSA-26xx-m4q2-xhq8", "https://github.com/spree/spree_auth_devise/commit/adf6ed4cd94d66091776b5febd4ff3767362de63"], "description": ["spree_auth_devise is an open source library which provides authentication and authorization services for use with the Spree storefront framework by using an underlying Devise authentication framework. In affected versions spree_auth_devise is subject to a CSRF vulnerability that allows user account takeover. All applications using any version of the frontend component of spree_auth_devise are affected if protect_from_forgery method is both: Executed whether as: A before_action callback (the default). A prepend_before_action (option prepend: true given) before the :load_object hook in Spree::UserController (most likely order to find). Configured to use :null_session or :reset_session strategies (:null_session is the default in case the no strategy is given, but rails --new generated skeleton use :exception). Users are advised to update their spree_auth_devise gem. For users unable to update it may be possible to change your strategy to :exception. Please see the linked GHSA for more workaround details. ### Impact CSRF vulnerability that allows user account takeover. All applications using any version of the frontend component of `spree_auth_devise` are affected if `protect_from_forgery` method is both: * Executed whether as: * A before_action callback (the default) * A prepend_before_action (option prepend: true given) before the :load_object hook in Spree::UserController (most likely order to find). * Configured to use :null_session or :reset_session strategies (:null_session is the default in case the no strategy is given, but rails --new generated skeleton use :exception). That means that applications that haven't been configured differently from what it's generated with Rails aren't affected. Thanks @waiting-for-dev for reporting and providing a patch üëè ### Patches Spree 4.3 users should update to spree_auth_devise 4.4.1 Spree 4.2 users should update to spree_auth_devise 4.2.1 ### Workarounds If possible, change your strategy to :exception: ```ruby class ApplicationController < ActionController::Base protect_from_forgery with: :exception end ``` Add the following to`config/application.rb `to at least run the `:exception` strategy on the affected controller: ```ruby config.after_initialize do Spree::UsersController.protect_from_forgery with: :exception end ``` ### References https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2"], "published": "2021-11-17T20:15:10.527", "state": "PUBLIC", "vendorName": ["spree"], "productName": ["spree_auth_devise"], "github": {"advisories": ["https://github.com/spree/spree_auth_devise/security/advisories/GHSA-26xx-m4q2-xhq8"], "commits": ["https://github.com/spree/spree_auth_devise/commit/adf6ed4cd94d66091776b5febd4ff3767362de63"], "pocAdvisorie": {}, "repo": "https://github.com/spree/spree_auth_devise/", "info": {"exist": true, "topics": ["auth", "authentication", "devise", "ecommerce", "rails", "spree", "spreecomerce", "userauthentication"], "langs": {"Ruby": 118479, "HTML": 11897}, "avatar": "https://avatars.githubusercontent.com/u/56702?v=4", "stargazers": 141, "language": "Ruby"}}, "pocList": []}