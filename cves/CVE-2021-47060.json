{"cveId": "CVE-2021-47060", "cwe": [], "cvss": [{"baseScore": "6.0", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "High", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/7d1bc32d6477ff96a32695ea4be8144e4513ab2d", "https://git.kernel.org/stable/c/2a20592baff59c5351c5200ec667e1a2aa22af85", "https://git.kernel.org/stable/c/168e82f640ed1891a700bdb43e37da354b2ab63c", "https://git.kernel.org/stable/c/50cbad42bfea8c052b7ca590bd4126cdc898713c", "https://git.kernel.org/stable/c/5d3c4c79384af06e3c8e25b7770b6247496b4417"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Stop looking for coalesced MMIO zones if the bus is destroyed\n\nAbort the walk of coalesced MMIO zones if kvm_io_bus_unregister_dev()\nfails to allocate memory for the new instance of the bus.  If it can't\ninstantiate a new bus, unregister_dev() destroys all devices _except_ the\ntarget device.   But, it doesn't tell the caller that it obliterated the\nbus and invoked the destructor for all devices that were on the bus.  In\nthe coalesced MMIO case, this can result in a deleted list entry\ndereference due to attempting to continue iterating on coalesced_zones\nafter future entries (in the walk) have been deleted.\n\nOpportunistically add curly braces to the for-loop, which encompasses\nmany lines but sneaks by without braces due to the guts being a single\nif statement."], "published": "2024-02-29T23:15:07.740", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}