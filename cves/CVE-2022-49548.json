{"cveId": "CVE-2022-49548", "cwe": ["CWE-129", "CWE-129"], "cvss": [{"baseScore": "7.8", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/7f845de2863334bed4f362e95853f5e7bc323737", "https://git.kernel.org/stable/c/e36452d5da6325df7c10cffc60a9e68d21e2606d", "https://git.kernel.org/stable/c/32c4559c61652f24c9fdd5440342196fe37453bc", "https://git.kernel.org/stable/c/4f8897bcc20b9ae44758e0572538d741ab66f0dc", "https://git.kernel.org/stable/c/a2aa95b71c9bbec793b5c5fa50f0a80d882b3e8d"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix potential array overflow in bpf_trampoline_get_progs()\n\nThe cnt value in the 'cnt >= BPF_MAX_TRAMP_PROGS' check does not\ninclude BPF_TRAMP_MODIFY_RETURN bpf programs, so the number of\nthe attached BPF_TRAMP_MODIFY_RETURN bpf programs in a trampoline\ncan exceed BPF_MAX_TRAMP_PROGS.\n\nWhen this happens, the assignment '*progs++ = aux->prog' in\nbpf_trampoline_get_progs() will cause progs array overflow as the\nprogs field in the bpf_tramp_progs struct can only hold at most\nBPF_MAX_TRAMP_PROGS bpf programs."], "published": "2025-02-26T07:01:30.683", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}