{"cveId": "CVE-2023-26145", "cwe": ["CWE-78", "CWE-78", "CWE-77", "CWE-94", "CWE-78", "CWE-77", "CWE-94"], "cvss": [{"baseScore": "7.4", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518", "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca", "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021"], "description": ["This affects versions of the package pydash before 6.0.0. A number of pydash methods such as pydash.objects.invoke() and pydash.collections.invoke_map() accept dotted paths (Deep Path Strings) to target a nested Python object, relative to the original source object. These paths can be used to target internal class attributes and dict items, to retrieve, modify or invoke nested Python objects.\r\r**Note:**\r\rThe pydash.objects.invoke() method is vulnerable to Command Injection when the following prerequisites are satisfied:\r\r1) The source object (argument 1) is not a built-in object such as list/dict (otherwise, the __init__.__globals__ path is not accessible)\r\r2) The attacker has control over argument 2 (the path string) and argument 3 (the argument to pass to the invoked method)\r\r\rThe pydash.collections.invoke_map() method is also vulnerable, but is harder to exploit as the attacker does not have direct control over the argument to be passed to the invoked function."], "published": "2023-09-28T05:15:45.843", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["pydash"], "github": {"advisories": [], "commits": ["https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021"], "pocAdvisorie": null, "repo": "https://github.com/dgilland/pydash/", "info": {"exist": true, "topics": ["functional", "lodash", "python", "python3", "utility"], "langs": {"Python": 833475}, "avatar": "https://avatars.githubusercontent.com/u/1251349?v=4", "stargazers": 1369, "language": "Python"}}, "pocList": []}