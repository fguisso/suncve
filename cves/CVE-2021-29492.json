{"cveId": "CVE-2021-29492", "cwe": ["CWE-22", "CWE-22"], "cvss": [{"baseScore": "8.1", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "High"}], "references": ["https://github.com/envoyproxy/envoy/security/advisories/GHSA-4987-27fx-x6cf"], "description": ["Envoy is a cloud-native edge/middle/service proxy. Envoy does not decode escaped slash sequences `%2F` and `%5C` in HTTP URL paths in versions 1.18.2 and before. A remote attacker may craft a path with escaped slashes, e.g. `/something%2F..%2Fadmin`, to bypass access control, e.g. a block on `/admin`. A backend server could then decode slash sequences and normalize path and provide an attacker access beyond the scope provided for by the access control policy. ### Impact Escalation of Privileges when using RBAC or JWT filters with enforcement based on URL path. Users with back end servers that interpret `%2F` and `/` and `%5C` and `\\` interchangeably are impacted. ### Attack Vector URL paths containing escaped slash characters delivered by untrusted client. Patches in versions 1.18.3, 1.17.3, 1.16.4, 1.15.5 contain new path normalization option to decode escaped slash characters. As a workaround, if back end servers treat `%2F` and `/` and `%5C` and `\\` interchangeably and a URL path based access control is configured, one may reconfigure the back end server to not treat `%2F` and `/` and `%5C` and `\\` interchangeably."], "published": "2021-05-28T21:15:08.670", "state": "PUBLIC", "vendorName": ["envoyproxy"], "productName": ["envoy"], "github": {"advisories": ["https://github.com/envoyproxy/envoy/security/advisories/GHSA-4987-27fx-x6cf"], "commits": [], "pocAdvisorie": {}, "repo": "https://github.com/envoyproxy/envoy/", "info": {"exist": true, "topics": ["cars", "cats", "cats-over-dogs", "cncf", "corgis", "more-cats", "nanoservices", "rocket-ships"], "langs": {"C++": 49350623, "Starlark": 3216959, "Java": 1325292, "Python": 604792, "Assembly": 327095, "Kotlin": 310645, "Swift": 250537, "Go": 247548, "Shell": 232235, "Rust": 139702, "C": 70169, "JavaScript": 66339, "Objective-C++": 55490, "Objective-C": 48840, "Jinja": 47798, "Smarty": 3528, "CSS": 2927, "HTML": 1522, "Emacs Lisp": 966, "Dockerfile": 960, "Thrift": 748, "PureBasic": 472, "Batchfile": 439, "Makefile": 303}, "avatar": "https://avatars.githubusercontent.com/u/30125649?v=4", "stargazers": 25769, "language": "C++"}}, "pocList": []}