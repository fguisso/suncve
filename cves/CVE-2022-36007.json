{"cveId": "CVE-2022-36007", "cwe": ["CWE-22", "CWE-22"], "cvss": [{"baseScore": "6.1", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "Low", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://github.com/jlangch/venice/security/advisories/GHSA-4mmh-5vw7-rgvj", "https://github.com/jlangch/venice/commit/215ae91bb964013b0a2d70718a692832d561ae0a", "https://github.com/jlangch/venice/commit/c942c73136333bc493050910f171a48e6f575b23", "https://github.com/jlangch/venice/releases/tag/v1.10.17"], "description": ["Venice is a Clojure inspired sandboxed Lisp dialect with excellent Java interoperability. A partial path traversal issue exists within the functions `load-file` and `load-resource`. These functions can be limited to load files from a list of load paths. Assuming Venice has been configured with the load paths: `[ \"/Users/foo/resources\" ]` When passing **relative** paths to these two vulnerable functions everything is fine: `(load-resource \"test.png\")` => loads the file \"/Users/foo/resources/test.png\" `(load-resource \"../resources-alt/test.png\")` => rejected, outside the load path When passing **absolute** paths to these two vulnerable functions Venice may return files outside the configured load paths: `(load-resource \"/Users/foo/resources/test.png\")` => loads the file \"/Users/foo/resources/test.png\" `(load-resource \"/Users/foo/resources-alt/test.png\")` => loads the file \"/Users/foo/resources-alt/test.png\" !!! The latter call suffers from the _Partial Path Traversal_ vulnerability. This issueâ€™s scope is limited to absolute paths whose name prefix matches a load path. E.g. for a load-path `\"/Users/foo/resources\"`, the actor can cause loading a resource also from `\"/Users/foo/resources-alt\"`, but not from `\"/Users/foo/images\"`. Versions of Venice before and including v1.10.17 are affected by this issue. Upgrade to Venice >= 1.10.18, if you are on a version < 1.10.18. There are currently no known workarounds."], "published": "2022-08-15T11:21:40.967", "state": "PUBLIC", "vendorName": ["jlangch"], "productName": ["venice"], "github": {"advisories": ["https://github.com/jlangch/venice/security/advisories/GHSA-4mmh-5vw7-rgvj"], "commits": ["https://github.com/jlangch/venice/commit/215ae91bb964013b0a2d70718a692832d561ae0a", "https://github.com/jlangch/venice/commit/c942c73136333bc493050910f171a48e6f575b23"], "pocAdvisorie": {}, "repo": "https://github.com/jlangch/venice/", "info": {"exist": true, "topics": ["clojure", "devops", "functional", "functional-programming", "java-interoperability", "language", "lisp", "programming-language", "repl", "sandbox", "scripting"], "langs": {"Java": 7859494, "HTML": 7570729, "Shell": 10085, "Vim Snippet": 3536, "Batchfile": 3230}, "avatar": "https://avatars.githubusercontent.com/u/30694956?v=4", "stargazers": 34, "language": "Java"}}, "pocList": []}