{"cveId": "CVE-2022-48939", "cwe": ["CWE-834", "CWE-834"], "cvss": [{"baseScore": "3.3", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "Low"}], "references": ["https://git.kernel.org/stable/c/7ef94bfb08fb9e73defafbd5ddef6b5a0e2ee12b", "https://git.kernel.org/stable/c/8628f489b749a4f9767991631921dbe3fbcdc784", "https://git.kernel.org/stable/c/7e8099967d0e3ff9d1ae043e80b27fbe46c08417", "https://git.kernel.org/stable/c/75134f16e7dd0007aa474b281935c5f42e79f2c8"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Add schedule points in batch ops\n\nsyzbot reported various soft lockups caused by bpf batch operations.\n\n INFO: task kworker/1:1:27 blocked for more than 140 seconds.\n INFO: task hung in rcu_barrier\n\nNothing prevents batch ops to process huge amount of data,\nwe need to add schedule points in them.\n\nNote that maybe_wait_bpf_programs(map) calls from\ngeneric_map_delete_batch() can be factorized by moving\nthe call after the loop.\n\nThis will be done later in -next tree once we get this fix merged,\nunless there is strong opinion doing this optimization sooner."], "published": "2024-08-22T04:15:17.843", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}