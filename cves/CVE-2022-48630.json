{"cveId": "CVE-2022-48630", "cwe": ["CWE-835", "CWE-835"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/71a89789552b7faf3ef27969b9bc783fa0df3550", "https://git.kernel.org/stable/c/8be06f62b426801dba43ddf8893952a0e62ab6ae", "https://git.kernel.org/stable/c/233a3cc60e7a8fe0be8cf9934ae7b67ba25a866c", "https://git.kernel.org/stable/c/8a06f25f5941c145773204f2f7abef95b4ffb8ce", "https://git.kernel.org/stable/c/05d4d17475d8d094c519bb51658bc47899c175e3", "https://git.kernel.org/stable/c/16287397ec5c08aa58db6acf7dbc55470d78087d"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qcom-rng - fix infinite loop on requests not multiple of WORD_SZ\n\nThe commit referenced in the Fixes tag removed the 'break' from the else\nbranch in qcom_rng_read(), causing an infinite loop whenever 'max' is\nnot a multiple of WORD_SZ. This can be reproduced e.g. by running:\n\n    kcapi-rng -b 67 >/dev/null\n\nThere are many ways to fix this without adding back the 'break', but\nthey all seem more awkward than simply adding it back, so do just that.\n\nTested on a machine with Qualcomm Amberwing processor."], "published": "2024-03-05T12:15:45.780", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}