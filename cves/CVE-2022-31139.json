{"cveId": "CVE-2022-31139", "cwe": ["CWE-200", "CWE-863", "CWE-200", "CWE-863"], "cvss": [{"baseScore": "5.9", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "None", "Availability Impact": "None"}], "references": ["https://github.com/Karlatemp/UnsafeAccessor/security/advisories/GHSA-cr6p-23cf-w9g9", "https://github.com/Karlatemp/UnsafeAccessor/commit/4ef83000184e8f13239a1ea2847ee401d81585fd", "https://github.com/Karlatemp/UnsafeAccessor/releases/tag/1.7.0"], "description": ["UnsafeAccessor (UA) is a bridge to access jdk.internal.misc.Unsafe & sun.misc.Unsafe. Normally, if UA is loaded as a named module, the internal data of UA is protected by JVM and others can only access UA via UA's standard API. The main application can set up `SecurityCheck.AccessLimiter` for UA to limit access to UA. Starting with version 1.4.0 and prior to version 1.7.0, when `SecurityCheck.AccessLimiter` is set up, untrusted code can access UA without limitation, even when UA is loaded as a named module. This issue does not affect those for whom `SecurityCheck.AccessLimiter` is not set up. Version 1.7.0 contains a patch."], "published": "2022-07-11T19:15:07.890", "state": "PUBLIC", "vendorName": ["Karlatemp"], "productName": ["UnsafeAccessor"], "github": {"advisories": ["https://github.com/Karlatemp/UnsafeAccessor/security/advisories/GHSA-cr6p-23cf-w9g9"], "commits": ["https://github.com/Karlatemp/UnsafeAccessor/commit/4ef83000184e8f13239a1ea2847ee401d81585fd"], "pocAdvisorie": {}, "repo": "https://github.com/Karlatemp/UnsafeAccessor/", "info": {"exist": true, "topics": ["java", "jdk", "jvm", "reflect", "reflection", "security", "tool", "tools", "unsafe"], "langs": {"Java": 396681}, "avatar": "https://avatars.githubusercontent.com/u/30070303?v=4", "stargazers": 23, "language": "Java"}}, "pocList": []}