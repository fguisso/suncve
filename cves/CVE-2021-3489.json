{"cveId": "CVE-2021-3489", "cwe": ["CWE-119", "CWE-787", "CWE-787", "CWE-119", "CWE-787", "CWE-787"], "cvss": [{"baseScore": "7.8", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "High", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Complete", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "High"}], "references": ["https://www.openwall.com/lists/oss-security/2021/05/11/10", "https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf.git/commit/?id=4b81ccebaeee885ab1aa1438133f2991e3a2b6ea", "https://www.zerodayinitiative.com/advisories/ZDI-21-590/", "https://ubuntu.com/security/notices/USN-4950-1", "https://ubuntu.com/security/notices/USN-4949-1", "https://security.netapp.com/advisory/ntap-20210716-0004/"], "description": ["The eBPF RINGBUF bpf_ringbuf_reserve() function in the Linux kernel did not check that the allocated size was smaller than the ringbuf size, allowing an attacker to perform out-of-bounds writes within the kernel and therefore, arbitrary code execution. This issue was fixed via commit 4b81ccebaeee (\"bpf, ringbuf: Deny reserve of buffers larger than ringbuf\") (v5.13-rc4) and backported to the stable kernels in v5.12.4, v5.11.21, and v5.10.37. It was introduced via 457f44363a88 (\"bpf: Implement BPF ring buffer and verifier support for it\") (v5.8-rc1)."], "published": "2021-06-04T02:15:07.047", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux kernel"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}