{"cveId": "CVE-2022-23495", "cwe": ["CWE-755", "CWE-755", "CWE-252", "CWE-755", "CWE-252"], "cvss": [{"baseScore": "7.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://github.com/ipfs/go-merkledag/security/advisories/GHSA-x39j-h85h-3f46", "https://github.com/ipfs/go-merkledag/issues/90", "https://github.com/ipfs/kubo/issues/9297", "https://github.com/ipfs/go-merkledag/pull/91", "https://github.com/ipfs/go-merkledag/pull/92", "https://github.com/ipfs/go-merkledag/pull/93", "https://en.wikipedia.org/wiki/Directed_acyclic_graph", "https://github.com/ipfs/go-merkledag/releases/tag/v0.8.0", "https://github.com/ipfs/go-merkledag/releases/tag/v0.8.1"], "description": ["go-merkledag implements the 'DAGService' interface and adds two ipld node types, Protobuf and Raw for the ipfs project. A `ProtoNode` may be modified in such a way as to cause various encode errors which will trigger a panic on common method calls that don't allow for error returns. A `ProtoNode` should only be able to encode to valid DAG-PB, attempting to encode invalid DAG-PB forms will result in an error from the codec. Manipulation of an existing (newly created or decoded) `ProtoNode` using the modifier methods did not account for certain states that would place the `ProtoNode` into an unencodeable form. Due to conformance with the [`github.com/ipfs/go-block-format#Block`](https://pkg.go.dev/github.com/ipfs/go-block-format#Block) and [`github.com/ipfs/go-ipld-format#Node`](https://pkg.go.dev/github.com/ipfs/go-ipld-format#Node) interfaces, certain methods, which internally require a re-encode if state has changed, will panic due to the inability to return an error. This issue has been addressed across a number of pull requests. Users are advised to upgrade to version 0.8.1 for a complete set of fixes. Users unable to upgrade may attempt to mitigate this issue by sanitising inputs when allowing user-input to set a new `CidBuilder` on a `ProtoNode` and by sanitising `Tsize` (`Link#Size`) values such that they are a reasonable byte-size for sub-DAGs where derived from user-input."], "published": "2022-12-08T22:15:10.233", "state": "PUBLIC", "vendorName": ["ipfs"], "productName": ["go-merkledag"], "github": {"advisories": ["https://github.com/ipfs/go-merkledag/security/advisories/GHSA-x39j-h85h-3f46"], "commits": [], "pocAdvisorie": {}, "repo": "https://github.com/ipfs/go-merkledag/", "info": {"exist": true, "topics": [], "langs": {"Go": 158181}, "avatar": "https://avatars.githubusercontent.com/u/10536621?v=4", "stargazers": 83, "language": "Go"}}, "pocList": []}