{"cveId": "CVE-2025-21786", "cwe": ["CWE-416", "CWE-416"], "cvss": [{"baseScore": "7.8", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/e7c16028a424dd35be1064a68fa318be4359310f", "https://git.kernel.org/stable/c/835b69c868f53f959d4986bbecd561ba6f38e492", "https://git.kernel.org/stable/c/e76946110137703c16423baf6ee177b751a34b7e"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nworkqueue: Put the pwq after detaching the rescuer from the pool\n\nThe commit 68f83057b913(\"workqueue: Reap workers via kthread_stop() and\nremove detach_completion\") adds code to reap the normal workers but\nmistakenly does not handle the rescuer and also removes the code waiting\nfor the rescuer in put_unbound_pool(), which caused a use-after-free bug\nreported by Cheung Wall.\n\nTo avoid the use-after-free bug, the poolâ€™s reference must be held until\nthe detachment is complete. Therefore, move the code that puts the pwq\nafter detaching the rescuer from the pool."], "published": "2025-02-27T03:15:19.450", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}