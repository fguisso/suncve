{"cveId": "CVE-2020-9402", "cwe": ["CWE-89", "CWE-89"], "cvss": [{"baseScore": "8.8", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "High"}], "references": ["https://docs.djangoproject.com/en/3.0/releases/security/", "https://groups.google.com/forum/#!topic/django-announce/fLUh_pOaKrY", "https://www.djangoproject.com/weblog/2020/mar/04/security-releases/", "https://usn.ubuntu.com/4296-1/", "https://security.netapp.com/advisory/ntap-20200327-0004/", "https://security.gentoo.org/glsa/202004-17", "https://www.debian.org/security/2020/dsa-4705", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UZMN2NKAGTFE3YKMNM2JVJG7R2W7LLHY/", "https://lists.debian.org/debian-lts-announce/2022/05/msg00035.html"], "description": ["Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL."], "published": "2020-03-05T15:15:12.410", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["n/a"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}