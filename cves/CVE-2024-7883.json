{"cveId": "CVE-2024-7883", "cwe": ["CWE-226", "CWE-226", "CWE-226"], "cvss": [{"baseScore": "3.7", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "Low", "Integrity Impact": "None", "Availability Impact": "None"}], "references": ["https://developer.arm.com/Arm%20Security%20Center/Cortex-M%20Security%20Extensions%20Vulnerability"], "description": ["When using Arm Cortex-M Security Extensions (CMSE), Secure stack \ncontents can be leaked to Non-secure state via floating-point registers \nwhen a Secure to Non-secure function call is made that returns a \nfloating-point value and when this is the first use of floating-point \nsince entering Secure state. This allows an attacker to read a limited \nquantity of Secure stack contents with an impact on confidentiality. \nThis issue is specific to code generated using LLVM-based compilers."], "published": "2024-10-31T17:15:14.013", "state": "PUBLIC", "vendorName": ["Arm Ltd"], "productName": ["Arm Compiler for Embedded", "Arm Compiler for Embedded FuSa 6.16LTS", "Arm Compiler for Embedded FuSa 6.21", "Arm Compiler for Functional Safety 6.6", "CLang"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}