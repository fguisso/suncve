{"cveId": "CVE-2024-41080", "cwe": ["CWE-667", "CWE-667"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/b17397a0a5c56e111f61cb5b77d162664dc00de9", "https://git.kernel.org/stable/c/97ed7ff58de66c544692b3c2b988f3f594348de0", "https://git.kernel.org/stable/c/fdacd09f2ddf7a00787291f08ee48c0421e5b709", "https://git.kernel.org/stable/c/950ac86cff338ab56e2eaf611f4936ee34893b63", "https://git.kernel.org/stable/c/b571a367502c7ef94c688ef9c7f7d69a2ce3bcca", "https://git.kernel.org/stable/c/73254a297c2dd094abec7c9efee32455ae875bdf"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: fix possible deadlock in io_register_iowq_max_workers()\n\nThe io_register_iowq_max_workers() function calls io_put_sq_data(),\nwhich acquires the sqd->lock without releasing the uring_lock.\nSimilar to the commit 009ad9f0c6ee (\"io_uring: drop ctx->uring_lock\nbefore acquiring sqd->lock\"), this can lead to a potential deadlock\nsituation.\n\nTo resolve this issue, the uring_lock is released before calling\nio_put_sq_data(), and then it is re-acquired after the function call.\n\nThis change ensures that the locks are acquired in the correct\norder, preventing the possibility of a deadlock."], "published": "2024-07-29T15:15:15.523", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}