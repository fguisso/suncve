{"cveId": "CVE-2022-21230", "cwe": [], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "None", "Availability Impact": "None"}], "references": ["https://snyk.io/vuln/SNYK-JAVA-ORGNANOHTTPD-2422798", "https://github.com/NanoHttpd/nanohttpd/blob/efb2ebf85a2b06f7c508aba9eaad5377e3a01e81/core/src/main/java/org/nanohttpd/protocols/http/tempfiles/DefaultTempFile.java%23L58", "https://github.com/NanoHttpd/nanohttpd/blob/efb2ebf85a2b06f7c508aba9eaad5377e3a01e81/core/src/main/java/org/nanohttpd/protocols/http/tempfiles/DefaultTempFileManager.java%23L60", "https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-2r85-x9cf-8fcg"], "description": ["This affects all versions of package org.nanohttpd:nanohttpd. Whenever an HTTP Session is parsing the body of an HTTP request, the body of the request is written to a RandomAccessFile when the it is larger than 1024 bytes. This file is created with insecure permissions that allow its contents to be viewed by all users on the host machine. **Workaround:** Manually specifying the -Djava.io.tmpdir= argument when launching Java to set the temporary directory to a directory exclusively controlled by the current user can fix this issue."], "published": "2022-05-01T16:15:08.250", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["org.nanohttpd:nanohttpd"], "github": {"advisories": ["https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-2r85-x9cf-8fcg"], "commits": [], "pocAdvisorie": {}, "repo": "https://github.com/JLLeitschuh/security-research/", "info": {"exist": true, "topics": [], "langs": {"Python": 14444}, "avatar": "https://avatars.githubusercontent.com/u/1323708?v=4", "stargazers": 18, "language": "Python"}}, "pocList": []}