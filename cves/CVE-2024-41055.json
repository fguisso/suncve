{"cveId": "CVE-2024-41055", "cwe": ["CWE-476", "CWE-476"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/0100aeb8a12d51950418e685f879cc80cb8e5982", "https://git.kernel.org/stable/c/bc17f2377818dca643a74499c3f5333500c90503", "https://git.kernel.org/stable/c/941e816185661bf2b44b488565d09444ae316509", "https://git.kernel.org/stable/c/797323d1cf92d09b7a017cfec576d9babf99cde7", "https://git.kernel.org/stable/c/adccdf702b4ea913ded5ff512239e382d7473b63", "https://git.kernel.org/stable/c/82f0b6f041fad768c28b4ad05a683065412c226e"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nmm: prevent derefencing NULL ptr in pfn_section_valid()\n\nCommit 5ec8e8ea8b77 (\"mm/sparsemem: fix race in accessing\nmemory_section->usage\") changed pfn_section_valid() to add a READ_ONCE()\ncall around \"ms->usage\" to fix a race with section_deactivate() where\nms->usage can be cleared.  The READ_ONCE() call, by itself, is not enough\nto prevent NULL pointer dereference.  We need to check its value before\ndereferencing it."], "published": "2024-07-29T15:15:13.620", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}