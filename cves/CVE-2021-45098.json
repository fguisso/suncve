{"cveId": "CVE-2021-45098", "cwe": [], "cvss": [{"baseScore": "7.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://github.com/OISF/suricata/releases", "https://redmine.openinfosecfoundation.org/issues/4710", "https://forum.suricata.io/t/suricata-6-0-4-and-5-0-8-released/1942", "https://github.com/OISF/suricata/commit/50e2b973eeec7172991bf8f544ab06fb782b97df"], "description": ["An issue was discovered in Suricata before 6.0.4. It is possible to bypass/evade any HTTP-based signature by faking an RST TCP packet with random TCP options of the md5header from the client side. After the three-way handshake, it's possible to inject an RST ACK with a random TCP md5header option. Then, the client can send an HTTP GET request with a forbidden URL. The server will ignore the RST ACK and send the response HTTP packet for the client's request. These packets will not trigger a Suricata reject action."], "published": "2021-12-16T05:15:08.727", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["n/a"], "github": {"advisories": [], "commits": ["https://github.com/OISF/suricata/commit/50e2b973eeec7172991bf8f544ab06fb782b97df"], "pocAdvisorie": null, "repo": "https://github.com/OISF/suricata/", "info": {"exist": true, "topics": ["cybersecurity", "ids", "intrusion-detection-system", "intrusion-prevention-system", "ips", "network-monitor", "network-monitoring", "nsm", "security", "suricata", "threat-hunting"], "langs": {"C": 14194190, "Rust": 4392327, "M4": 113614, "Python": 77086, "Makefile": 47797, "Shell": 45734, "Raku": 38775, "Perl": 25948, "PHP": 7792, "SmPL": 5503, "Lua": 1583, "Dockerfile": 1106}, "avatar": "https://avatars.githubusercontent.com/u/2188963?v=4", "stargazers": 5133, "language": "C"}}, "pocList": []}