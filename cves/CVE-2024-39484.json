{"cveId": "CVE-2024-39484", "cwe": ["CWE-770", "CWE-770"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/6ff7cfa02baabec907f6f29ea76634e6256d2ec4", "https://git.kernel.org/stable/c/aea35157bb9b825faa0432bd0f7fbea37ff39aa1", "https://git.kernel.org/stable/c/5ee241f72edc6dce5051a5f100eab6cc019d873e", "https://git.kernel.org/stable/c/7590da4c04dd4aa9c262da0231e978263861c6eb", "https://git.kernel.org/stable/c/1d5ed0efe51d36b9ae9b64f133bf41cdbf56f584", "https://git.kernel.org/stable/c/55c421b364482b61c4c45313a535e61ed5ae4ea3"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: davinci: Don't strip remove function when driver is builtin\n\nUsing __exit for the remove function results in the remove callback being\ndiscarded with CONFIG_MMC_DAVINCI=y. When such a device gets unbound (e.g.\nusing sysfs or hotplug), the driver is just removed without the cleanup\nbeing performed. This results in resource leaks. Fix it by compiling in the\nremove callback unconditionally.\n\nThis also fixes a W=1 modpost warning:\n\nWARNING: modpost: drivers/mmc/host/davinci_mmc: section mismatch in\nreference: davinci_mmcsd_driver+0x10 (section: .data) ->\ndavinci_mmcsd_remove (section: .exit.text)"], "published": "2024-07-05T07:15:10.823", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}