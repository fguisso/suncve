{"cveId": "CVE-2024-22189", "cwe": ["CWE-770", "CWE-770", "CWE-770"], "cvss": [{"baseScore": "7.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://github.com/quic-go/quic-go/security/advisories/GHSA-c33x-xqrf-c478", "https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a", "https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management", "https://www.youtube.com/watch?v=JqXtYcZAtIA&t=3683s"], "description": ["quic-go is an implementation of the QUIC protocol in Go. Prior to version 0.42.0, an attacker can cause its peer to run out of memory sending a large number of `NEW_CONNECTION_ID` frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a `RETIRE_CONNECTION_ID` frame. The attacker can prevent the receiver from sending out (the vast majority of) these `RETIRE_CONNECTION_ID` frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate. Version 0.42.0 contains a patch for the issue. No known workarounds are available."], "published": "2024-04-04T15:15:37.990", "state": "PUBLIC", "vendorName": ["quic-go"], "productName": ["quic-go"], "github": {"advisories": ["https://github.com/quic-go/quic-go/security/advisories/GHSA-c33x-xqrf-c478"], "commits": ["https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a"], "pocAdvisorie": {}, "repo": "https://github.com/quic-go/quic-go/", "info": {"exist": true, "topics": ["go", "golang", "http3", "protocol", "quic", "quic-client", "quic-server"], "langs": {"Go": 2529028, "Shell": 3386, "Dockerfile": 1884}, "avatar": "https://avatars.githubusercontent.com/u/117172986?v=4", "stargazers": 10551, "language": "Go"}}, "pocList": []}