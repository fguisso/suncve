{"cveId": "CVE-2020-26241", "cwe": ["CWE-682", "CWE-682"], "cvss": [{"baseScore": "6.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://blog.ethereum.org/2020/11/12/geth_security_release/", "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-69v6-xc2j-r2jf"], "description": ["Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. This is a Consensus vulnerability in Geth before version 1.9.17 which can be used to cause a chain-split where vulnerable nodes reject the canonical chain. Geth's pre-compiled dataCopy (at 0x00...04) contract did a shallow copy on invocation. An attacker could deploy a contract that writes X to an EVM memory region R, then calls 0x00..04 with R as an argument, then overwrites R to Y, and finally invokes the RETURNDATACOPY opcode. When this contract is invoked, a consensus-compliant node would push X on the EVM stack, whereas Geth would push Y. This is fixed in version 1.9.17."], "published": "2020-11-25T02:15:11.047", "state": "PUBLIC", "vendorName": ["ethereum"], "productName": ["go-ethereum"], "github": {"advisories": ["https://github.com/ethereum/go-ethereum/security/advisories/GHSA-69v6-xc2j-r2jf"], "commits": [], "pocAdvisorie": {}, "repo": "https://github.com/ethereum/go-ethereum/", "info": {"exist": true, "topics": ["blockchain", "ethereum", "geth", "go", "p2p"], "langs": {"Go": 12013528, "C": 1854244, "JavaScript": 445914, "Assembly": 63615, "Sage": 42344, "Shell": 37523, "Python": 33217, "Smarty": 31693, "CMake": 30065, "M4": 23683, "NSIS": 23197, "Solidity": 14815, "Makefile": 13317, "Dockerfile": 4988, "HTML": 1121}, "avatar": "https://avatars.githubusercontent.com/u/6250754?v=4", "stargazers": 48700, "language": "Go"}}, "pocList": []}