{"cveId": "CVE-2023-37475", "cwe": ["CWE-400", "CWE-400", "CWE-400"], "cvss": [{"baseScore": "7.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://github.com/hamba/avro/security/advisories/GHSA-9x44-9pgq-cf45", "https://github.com/hamba/avro/commit/b4a402f41cf44b6094b5131286830ba9bb1eb290"], "description": ["Hamba avro is a go lang encoder/decoder implementation of the avro codec specification. In affected versions a well-crafted string passed to avro's `github.com/hamba/avro/v2.Unmarshal()` can throw a `fatal error: runtime: out of memory` which is unrecoverable and can cause denial of service of the consumer of avro. The root cause of the issue is that avro uses part of the input to `Unmarshal()` to determine the size when creating a new slice and hence an attacker may consume arbitrary amounts of memory which in turn may cause the application to crash. This issue has been addressed in commit `b4a402f4` which has been included in release version `2.13.0`. Users are advised to upgrade. There are no known workarounds for this vulnerability."], "published": "2023-07-17T17:15:10.127", "state": "PUBLIC", "vendorName": ["hamba"], "productName": ["avro"], "github": {"advisories": ["https://github.com/hamba/avro/security/advisories/GHSA-9x44-9pgq-cf45"], "commits": ["https://github.com/hamba/avro/commit/b4a402f41cf44b6094b5131286830ba9bb1eb290"], "pocAdvisorie": {"url": "https://github.com/hamba/avro/security/advisories/GHSA-9x44-9pgq-cf45", "kw": ["poc"]}, "repo": "https://github.com/hamba/avro/", "info": {"exist": true, "topics": ["avro", "avro-codec", "encoder-decoder", "golang"], "langs": {"Go": 689675, "Makefile": 435}, "avatar": "https://avatars.githubusercontent.com/u/47460342?v=4", "stargazers": 413, "language": "Go"}}, "pocList": []}