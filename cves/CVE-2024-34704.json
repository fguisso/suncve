{"cveId": "CVE-2024-34704", "cwe": ["CWE-682", "CWE-682", "CWE-682"], "cvss": [{"baseScore": "5.9", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://github.com/matter-labs/era-compiler-solidity/security/advisories/GHSA-22pj-7cvw-r3gc"], "description": ["era-compiler-solidity is the ZKsync compiler for Solidity.  The problem occurred during instruction selection in the `DAGCombine` phase while visiting the XOR operation. The issue arises when attempting to fold the expression `!(x cc y)` into `(x !cc y)`. To perform this transformation, the second operand of XOR should be a constant representing the true value. However, it was incorrectly assumed that -1 represents the true value, when in fact, 1 is the correct representation, so this transformation for this case should be skipped. This vulnerability is fixed in 1.4.1."], "published": "2024-05-14T15:39:29.560", "state": "PUBLIC", "vendorName": ["matter-labs"], "productName": ["era-compiler-solidity"], "github": {"advisories": ["https://github.com/matter-labs/era-compiler-solidity/security/advisories/GHSA-22pj-7cvw-r3gc"], "commits": [], "pocAdvisorie": {}, "repo": "https://github.com/matter-labs/era-compiler-solidity/", "info": {"exist": true, "topics": ["team-compiler"], "langs": {"Rust": 1151005, "Yul": 9856, "Solidity": 5778, "LLVM": 5073, "Batchfile": 1801, "Shell": 1578}, "avatar": "https://avatars.githubusercontent.com/u/42489169?v=4", "stargazers": 71, "language": "Rust"}}, "pocList": []}