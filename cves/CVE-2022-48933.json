{"cveId": "CVE-2022-48933", "cwe": ["CWE-401", "CWE-401"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/53026346a94c43f35c32b18804041bc483271d87", "https://git.kernel.org/stable/c/7e9880e81d3fd6a43c202f205717485290432826", "https://git.kernel.org/stable/c/e96e204ee6fa46702f6c94c3c69a09e69e0eac52", "https://git.kernel.org/stable/c/34bb90e407e3288f610558beaae54ecaa32b11c4", "https://git.kernel.org/stable/c/dad3bdeef45f81a6e90204bcc85360bb76eccec7"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memory leak during stateful obj update\n\nstateful objects can be updated from the control plane.\nThe transaction logic allocates a temporary object for this purpose.\n\nThe ->init function was called for this object, so plain kfree() leaks\nresources. We must call ->destroy function of the object.\n\nnft_obj_destroy does this, but it also decrements the module refcount,\nbut the update path doesn't increment it.\n\nTo avoid special-casing the update object release, do module_get for\nthe update case too and release it via nft_obj_destroy()."], "published": "2024-08-22T04:15:16.143", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}