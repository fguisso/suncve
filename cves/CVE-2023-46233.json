{"cveId": "CVE-2023-46233", "cwe": ["CWE-328", "CWE-916", "CWE-328", "CWE-916", "CWE-327", "CWE-328", "CWE-916", "CWE-327"], "cvss": [{"baseScore": "9.1", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://github.com/brix/crypto-js/security/advisories/GHSA-xwcq-pm8m-c4vf", "https://github.com/brix/crypto-js/commit/421dd538b2d34e7c24a5b72cc64dc2b9167db40a", "https://lists.debian.org/debian-lts-announce/2023/11/msg00025.html"], "description": ["crypto-js is a JavaScript library of crypto standards. Prior to version 4.2.0, crypto-js PBKDF2 is 1,000 times weaker than originally specified in 1993, and at least 1,300,000 times weaker than current industry standard. This is because it both defaults to SHA1, a cryptographic hash algorithm considered insecure since at least 2005, and defaults to one single iteration, a 'strength' or 'difficulty' value specified at 1,000 when specified in 1993. PBKDF2 relies on iteration count as a countermeasure to preimage and collision attacks. If used to protect passwords, the impact is high. If used to generate signatures, the impact is high. Version 4.2.0 contains a patch for this issue. As a workaround, configure crypto-js to use SHA256 with at least 250,000 iterations."], "published": "2023-10-25T21:15:10.307", "state": "PUBLIC", "vendorName": ["brix"], "productName": ["crypto-js"], "github": {"advisories": ["https://github.com/brix/crypto-js/security/advisories/GHSA-xwcq-pm8m-c4vf"], "commits": ["https://github.com/brix/crypto-js/commit/421dd538b2d34e7c24a5b72cc64dc2b9167db40a"], "pocAdvisorie": {}, "repo": "https://github.com/brix/crypto-js/", "info": {"exist": true, "topics": [], "langs": {"JavaScript": 382814, "HTML": 25423}, "avatar": "https://avatars.githubusercontent.com/u/8963996?v=4", "stargazers": 16072, "language": "JavaScript"}}, "pocList": []}