{"cveId": "CVE-2023-52462", "cwe": ["CWE-476", "CWE-476"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://git.kernel.org/stable/c/2757f17972d87773b3677777f5682510f13c66ef", "https://git.kernel.org/stable/c/67e6707f07354ed1acb4e65552e97c60cf9d69cf", "https://git.kernel.org/stable/c/fc3e3c50a0a4cac1463967c110686189e4a59104", "https://git.kernel.org/stable/c/8dc15b0670594543c356567a1a45b0182ec63174", "https://git.kernel.org/stable/c/40617d45ea05535105e202a8a819e388a2b1f036", "https://git.kernel.org/stable/c/ab125ed3ec1c10ccc36bc98c7a4256ad114a3dae"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: fix check for attempt to corrupt spilled pointer\n\nWhen register is spilled onto a stack as a 1/2/4-byte register, we set\nslot_type[BPF_REG_SIZE - 1] (plus potentially few more below it,\ndepending on actual spill size). So to check if some stack slot has\nspilled register we need to consult slot_type[7], not slot_type[0].\n\nTo avoid the need to remember and double-check this in the future, just\nuse is_spilled_reg() helper."], "published": "2024-02-23T15:15:08.540", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}