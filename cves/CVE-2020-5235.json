{"cveId": "CVE-2020-5235", "cwe": ["CWE-125", "CWE-125", "CWE-125", "CWE-125"], "cvss": [{"baseScore": "6.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Scope": "Complete", "Confidentiality Impact": "Low", "Integrity Impact": "Low", "Availability Impact": "Low"}], "references": ["https://github.com/nanopb/nanopb/security/advisories/GHSA-gcx3-7m76-287p", "https://github.com/nanopb/nanopb/commit/45582f1f97f49e2abfdba1463d1e1027682d9856", "https://github.com/nanopb/nanopb/commit/7b396821ddd06df8e39143f16e1dc0a4645b89a3", "https://github.com/nanopb/nanopb/commit/aa9d0d1ca78d6adec3adfeecf3a706c7f9df81f2"], "description": ["There is a potentially exploitable out of memory condition In Nanopb before 0.4.1, 0.3.9.5, and 0.2.9.4. When nanopb is compiled with PB_ENABLE_MALLOC, the message to be decoded contains a repeated string, bytes or message field and realloc() runs out of memory when expanding the array nanopb can end up calling `free()` on a pointer value that comes from uninitialized memory. Depending on platform this can result in a crash or further memory corruption, which may be exploitable in some cases. This problem is fixed in nanopb-0.4.1, nanopb-0.3.9.5, nanopb-0.2.9.4."], "published": "2020-02-04T03:15:10.657", "state": "PUBLIC", "vendorName": ["nanopb"], "productName": ["Nanopb"], "github": {"advisories": ["https://github.com/nanopb/nanopb/security/advisories/GHSA-gcx3-7m76-287p"], "commits": ["https://github.com/nanopb/nanopb/commit/45582f1f97f49e2abfdba1463d1e1027682d9856", "https://github.com/nanopb/nanopb/commit/7b396821ddd06df8e39143f16e1dc0a4645b89a3", "https://github.com/nanopb/nanopb/commit/aa9d0d1ca78d6adec3adfeecf3a706c7f9df81f2"], "pocAdvisorie": {}, "repo": "https://github.com/nanopb/nanopb/", "info": {"exist": true, "topics": ["c", "embedded", "embedded-c", "nanopb", "protocol-buffers"], "langs": {"C": 513786, "Python": 238261, "C++": 52886, "CMake": 26668, "Shell": 10945, "Starlark": 10145, "Makefile": 1683, "Swift": 1485, "Batchfile": 957, "Dockerfile": 852, "Objective-C": 141, "MATLAB": 16}, "avatar": "https://avatars.githubusercontent.com/u/12173937?v=4", "stargazers": 4573, "language": "C"}}, "pocList": []}