{"cveId": "CVE-2024-35879", "cwe": [], "cvss": [], "references": ["https://git.kernel.org/stable/c/3127b2ee50c424a96eb3559fbb7b43cf0b111c7a", "https://git.kernel.org/stable/c/3ee2424107546d882e1ddd75333ca9c32879908c", "https://git.kernel.org/stable/c/7b6df050c45a1ea158fd50bc32a8e1447dd1e951", "https://git.kernel.org/stable/c/801c8b8ec5bfb3519566dff16a5ecd48302fca82", "https://git.kernel.org/stable/c/ae6d76e4f06c37a623e357e79d49b17411db6f5c", "https://git.kernel.org/stable/c/8917e7385346bd6584890ed362985c219fe6ae84"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nof: dynamic: Synchronize of_changeset_destroy() with the devlink removals\n\nIn the following sequence:\n  1) of_platform_depopulate()\n  2) of_overlay_remove()\n\nDuring the step 1, devices are destroyed and devlinks are removed.\nDuring the step 2, OF nodes are destroyed but\n__of_changeset_entry_destroy() can raise warnings related to missing\nof_node_put():\n  ERROR: memory leak, expected refcount 1 instead of 2 ...\n\nIndeed, during the devlink removals performed at step 1, the removal\nitself releasing the device (and the attached of_node) is done by a job\nqueued in a workqueue and so, it is done asynchronously with respect to\nfunction calls.\nWhen the warning is present, of_node_put() will be called but wrongly\ntoo late from the workqueue job.\n\nIn order to be sure that any ongoing devlink removals are done before\nthe of_node destruction, synchronize the of_changeset_destroy() with the\ndevlink removals."], "published": "2024-05-19T09:15:09.173", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}