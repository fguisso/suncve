{"cveId": "CVE-2023-52505", "cwe": ["CWE-667", "CWE-667"], "cvss": [{"baseScore": "4.7", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "High", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/6f901f8448c6b25ed843796b114471d2a3fc5dfb", "https://git.kernel.org/stable/c/c2d7c79898b427d263c64a4841987eec131f2d4e", "https://git.kernel.org/stable/c/139ad1143151a07be93bf741d4ea7c89e59f89ce"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nphy: lynx-28g: serialize concurrent phy_set_mode_ext() calls to shared registers\n\nThe protocol converter configuration registers PCC8, PCCC, PCCD\n(implemented by the driver), as well as others, control protocol\nconverters from multiple lanes (each represented as a different\nstruct phy). So, if there are simultaneous calls to phy_set_mode_ext()\nto lanes sharing the same PCC register (either for the \"old\" or for the\n\"new\" protocol), corruption of the values programmed to hardware is\npossible, because lynx_28g_rmw() has no locking.\n\nAdd a spinlock in the struct lynx_28g_priv shared by all lanes, and take\nthe global spinlock from the phy_ops :: set_mode() implementation. There\nare no other callers which modify PCC registers."], "published": "2024-03-02T22:15:47.350", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}