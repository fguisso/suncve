{"cveId": "CVE-2019-19118", "cwe": ["CWE-276", "CWE-276"], "cvss": [{"baseScore": "6.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://docs.djangoproject.com/en/dev/releases/security/", "http://www.openwall.com/lists/oss-security/2019/12/02/1", "https://groups.google.com/forum/#!topic/django-announce/GjGqDvtNmWQ", "https://www.djangoproject.com/weblog/2019/dec/02/security-releases/", "https://security.netapp.com/advisory/ntap-20191217-0003/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6R4HD22PVEVQ45H2JA2NXH443AYJOPL5/", "https://security.gentoo.org/glsa/202004-17"], "description": ["Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)"], "published": "2019-12-02T14:15:10.880", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["n/a"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}