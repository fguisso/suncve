{"cveId": "CVE-2022-49406", "cwe": [], "cvss": [], "references": ["https://git.kernel.org/stable/c/dc107c805cde709866b59867ef72b9390199205e", "https://git.kernel.org/stable/c/717b078bc745ba9a262abebed9806a17e8bbb77b", "https://git.kernel.org/stable/c/41e46b3c2aa24f755b2ae9ec4ce931ba5f0d8532"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Fix potential deadlock in blk_ia_range_sysfs_show()\n\nWhen being read, a sysfs attribute is already protected against removal\nwith the kobject node active reference counter. As a result, in\nblk_ia_range_sysfs_show(), there is no need to take the queue sysfs\nlock when reading the value of a range attribute. Using the queue sysfs\nlock in this function creates a potential deadlock situation with the\ndisk removal, something that a lockdep signals with a splat when the\ndevice is removed:\n\n[  760.703551]  Possible unsafe locking scenario:\n[  760.703551]\n[  760.703554]        CPU0                    CPU1\n[  760.703556]        ----                    ----\n[  760.703558]   lock(&q->sysfs_lock);\n[  760.703565]                                lock(kn->active#385);\n[  760.703573]                                lock(&q->sysfs_lock);\n[  760.703579]   lock(kn->active#385);\n[  760.703587]\n[  760.703587]  *** DEADLOCK ***\n\nSolve this by removing the mutex_lock()/mutex_unlock() calls from\nblk_ia_range_sysfs_show()."], "published": "2025-02-26T07:01:17.123", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}