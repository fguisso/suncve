{"cveId": "CVE-2024-26910", "cwe": ["CWE-362", "CWE-362"], "cvss": [{"baseScore": "4.7", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "High", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/c7f2733e5011bfd136f1ca93497394d43aa76225", "https://git.kernel.org/stable/c/a24d5f2ac8ef702a58e55ec276aad29b4bd97e05", "https://git.kernel.org/stable/c/c2dc077d8f722a1c73a24e674f925602ee5ece49", "https://git.kernel.org/stable/c/653bc5e6d9995d7d5f497c665b321875a626161c", "https://git.kernel.org/stable/c/b93a6756a01f4fd2f329a39216f9824c56a66397", "https://git.kernel.org/stable/c/970709a67696b100a57b33af1a3d75fc34b747eb", "https://git.kernel.org/stable/c/97f7cf1cd80eeed3b7c808b7c12463295c751001"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: fix performance regression in swap operation\n\nThe patch \"netfilter: ipset: fix race condition between swap/destroy\nand kernel side add/del/test\", commit 28628fa9 fixes a race condition.\nBut the synchronize_rcu() added to the swap function unnecessarily slows\nit down: it can safely be moved to destroy and use call_rcu() instead.\n\nEric Dumazet pointed out that simply calling the destroy functions as\nrcu callback does not work: sets with timeout use garbage collectors\nwhich need cancelling at destroy which can wait. Therefore the destroy\nfunctions are split into two: cancelling garbage collectors safely at\nexecuting the command received by netlink and moving the remaining\npart only into the rcu callback."], "published": "2024-04-17T16:15:07.860", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}