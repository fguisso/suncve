{"cveId": "CVE-2024-51987", "cwe": ["CWE-270", "CWE-270", "CWE-270"], "cvss": [{"baseScore": "5.4", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "Required", "Scope": "Unchaged", "Confidentiality Impact": "Low", "Integrity Impact": "Low", "Availability Impact": "None"}], "references": ["https://github.com/DuendeSoftware/Duende.AccessTokenManagement/security/advisories/GHSA-7mr7-4f54-vcx5"], "description": ["Duende.AccessTokenManagement.OpenIdConnect is a set of .NET libraries that manage OAuth and OpenId Connect access tokens. HTTP Clients created by `AddUserAccessTokenHttpClient` may use a different user's access token after a token refresh occurs. This occurs because a refreshed token will be captured in pooled `HttpClient` instances, which may be used by a different user. Instead of using `AddUserAccessTokenHttpClient` to create an `HttpClient` that automatically adds a managed token to outgoing requests, you can use the `HttpConext.GetUserAccessTokenAsync` extension method or the `IUserTokenManagementService.GetAccessTokenAsync` method. This issue is fixed in Duende.AccessTokenManagement.OpenIdConnect 3.0.1. All users are advised to upgrade. There are no known workarounds for this vulnerability."], "published": "2024-11-08T00:15:15.233", "state": "PUBLIC", "vendorName": ["DuendeSoftware"], "productName": ["Duende.AccessTokenManagement"], "github": {"advisories": ["https://github.com/DuendeSoftware/Duende.AccessTokenManagement/security/advisories/GHSA-7mr7-4f54-vcx5"], "commits": [], "pocAdvisorie": {}, "repo": "https://github.com/DuendeSoftware/Duende.AccessTokenManagement/", "info": {"exist": true, "topics": [], "langs": {"C#": 268496, "Shell": 73, "PowerShell": 69, "Batchfile": 43}, "avatar": "https://avatars.githubusercontent.com/u/201220605?v=4", "stargazers": 223, "language": "C#"}}, "pocList": []}