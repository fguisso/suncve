{"cveId": "CVE-2017-3737", "cwe": ["CWE-125", "CWE-787", "CWE-125", "CWE-787"], "cvss": [{"baseScore": "4.3", "version": "2.0", "Attack Vector": "None", "Attack Complexity": "M", "Privileges Required": "None", "User Interaction": "None", "Scope": "None", "Confidentiality Impact": "Partial", "Integrity Impact": "None", "Availability Impact": "None"}], "references": ["https://access.redhat.com/errata/RHSA-2018:2185", "https://access.redhat.com/errata/RHSA-2018:2186", "https://github.com/openssl/openssl/commit/898fb884b706aaeb283de4812340bb0bde8476dc", "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html", "http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html", "https://security.netapp.com/advisory/ntap-20180419-0002/", "https://security.FreeBSD.org/advisories/FreeBSD-SA-17:12.openssl.asc", "https://security.gentoo.org/glsa/201712-03", "http://www.securitytracker.com/id/1039978", "https://www.openssl.org/news/secadv/20171207.txt", "https://www.digitalmunition.me/2017/12/cve-2017-3737-openssl-security-bypass-vulnerability/", "https://access.redhat.com/errata/RHSA-2018:0998", "http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html", "https://www.debian.org/security/2017/dsa-4065", "https://cert-portal.siemens.com/productcert/pdf/ssa-179516.pdf", "http://www.securityfocus.com/bid/102103", "https://www.tenable.com/security/tns-2017-16", "https://access.redhat.com/errata/RHSA-2018:2187", "https://security.netapp.com/advisory/ntap-20180117-0002/", "https://security.netapp.com/advisory/ntap-20171208-0001/", "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html"], "description": ["OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected."], "published": "2017-12-07T16:29:00.193", "state": "PUBLIC", "vendorName": ["OpenSSL Software Foundation"], "productName": ["OpenSSL"], "github": {"advisories": [], "commits": ["https://github.com/openssl/openssl/commit/898fb884b706aaeb283de4812340bb0bde8476dc"], "pocAdvisorie": null, "repo": "https://github.com/openssl/openssl/", "info": {"exist": true, "topics": ["cryptography", "decryption", "encryption", "openssl", "ssl", "tls"], "langs": {"C": 30181406, "Perl": 8695091, "C++": 620891, "Raku": 203883, "Assembly": 199498, "Shell": 117168, "M4": 46625, "Python": 32098, "CMake": 12086, "eC": 7476, "DIGITAL Command Language": 5687, "Dockerfile": 1860, "Ruby": 1344, "sed": 502}, "avatar": "https://avatars.githubusercontent.com/u/3279138?v=4", "stargazers": 27093, "language": "C"}}, "pocList": []}