{"cveId": "CVE-2023-52509", "cwe": ["CWE-416", "CWE-416"], "cvss": [{"baseScore": "7.8", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/65d34cfd4e347054eb4193bc95d9da7eaa72dee5", "https://git.kernel.org/stable/c/db9aafa19547833240f58c2998aed7baf414dc82", "https://git.kernel.org/stable/c/616761cf9df9af838c0a1a1232a69322a9eb67e6", "https://git.kernel.org/stable/c/6f6fa8061f756aedb93af12a8a5d3cf659127965", "https://git.kernel.org/stable/c/105abd68ad8f781985113aee2e92e0702b133705", "https://git.kernel.org/stable/c/3971442870713de527684398416970cf025b4f89"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nravb: Fix use-after-free issue in ravb_tx_timeout_work()\n\nThe ravb_stop() should call cancel_work_sync(). Otherwise,\nravb_tx_timeout_work() is possible to use the freed priv after\nravb_remove() was called like below:\n\nCPU0\t\t\tCPU1\n\t\t\travb_tx_timeout()\nravb_remove()\nunregister_netdev()\nfree_netdev(ndev)\n// free priv\n\t\t\travb_tx_timeout_work()\n\t\t\t// use priv\n\nunregister_netdev() will call .ndo_stop() so that ravb_stop() is\ncalled. And, after phy_stop() is called, netif_carrier_off()\nis also called. So that .ndo_tx_timeout() will not be called\nafter phy_stop()."], "published": "2024-03-02T22:15:47.540", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}