{"cveId": "CVE-2024-46842", "cwe": ["CWE-416", "CWE-416"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/bba47fe3b038cca3d3ebd799665ce69d6d273b58", "https://git.kernel.org/stable/c/ede596b1434b57c0b3fd5c02b326efe5c54f6e48"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Handle mailbox timeouts in lpfc_get_sfp_info\n\nThe MBX_TIMEOUT return code is not handled in lpfc_get_sfp_info and the\nroutine unconditionally frees submitted mailbox commands regardless of\nreturn status.  The issue is that for MBX_TIMEOUT cases, when firmware\nreturns SFP information at a later time, that same mailbox memory region\nreferences previously freed memory in its cmpl routine.\n\nFix by adding checks for the MBX_TIMEOUT return code.  During mailbox\nresource cleanup, check the mbox flag to make sure that the wait did not\ntimeout.  If the MBOX_WAKE flag is not set, then do not free the resources\nbecause it will be freed when firmware completes the mailbox at a later\ntime in its cmpl routine.\n\nAlso, increase the timeout from 30 to 60 seconds to accommodate boot\nscripts requiring longer timeouts."], "published": "2024-09-27T13:15:16.190", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}