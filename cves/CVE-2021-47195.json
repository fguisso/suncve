{"cveId": "CVE-2021-47195", "cwe": ["CWE-416", "CWE-416"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/54c2c96eafcfd242e52e932ab54ace4784efe1dd", "https://git.kernel.org/stable/c/11eab327a2a8bd36c38afbff920ae1bd45588dd4", "https://git.kernel.org/stable/c/37330f37f6666c7739a44b2b6b95b047ccdbed2d", "https://git.kernel.org/stable/c/6c53b45c71b4920b5e62f0ea8079a1da382b9434"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nspi: fix use-after-free of the add_lock mutex\n\nCommit 6098475d4cb4 (\"spi: Fix deadlock when adding SPI controllers on\nSPI buses\") introduced a per-controller mutex. But mutex_unlock() of\nsaid lock is called after the controller is already freed:\n\n  spi_unregister_controller(ctlr)\n  -> put_device(&ctlr->dev)\n    -> spi_controller_release(dev)\n  -> mutex_unlock(&ctrl->add_lock)\n\nMove the put_device() after the mutex_unlock()."], "published": "2024-04-10T19:15:47.853", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}