{"cveId": "CVE-2019-3901", "cwe": ["CWE-667", "CWE-667", "CWE-667", "CWE-667", "CWE-667"], "cvss": [{"baseScore": "4.7", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "High", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "None", "Availability Impact": "None"}], "references": ["https://lists.debian.org/debian-lts-announce/2019/05/msg00041.html", "https://lists.debian.org/debian-lts-announce/2019/05/msg00042.html", "https://security.netapp.com/advisory/ntap-20190517-0005/", "http://www.securityfocus.com/bid/89937", "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3901"], "description": ["A race condition in perf_event_open() allows local attackers to leak sensitive data from setuid programs. As no relevant locks (in particular the cred_guard_mutex) are held during the ptrace_may_access() call, it is possible for the specified target task to perform an execve() syscall with setuid execution before perf_event_alloc() actually attaches to it, allowing an attacker to bypass the ptrace_may_access() check and the perf_event_exit_task(current) call that is performed in install_exec_creds() during privileged execve() calls. This issue affects kernel versions before 4.8."], "published": "2019-04-22T16:29:01.850", "state": "PUBLIC", "vendorName": ["The Linux Foundation"], "productName": ["kernel"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}