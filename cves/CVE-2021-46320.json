{"cveId": "CVE-2021-46320", "cwe": ["CWE-665", "CWE-665"], "cvss": [{"baseScore": "7.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "High", "Availability Impact": "None"}], "references": ["https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9c22-pwxw-p6hx"], "description": ["In OpenZeppelin <=v4.4.0, initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call. Once an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible, breaking the expectation that there is a single execution."], "published": "2022-02-04T12:15:07.623", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["n/a"], "github": {"advisories": ["https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9c22-pwxw-p6hx"], "commits": [], "pocAdvisorie": {}, "repo": "https://github.com/OpenZeppelin/openzeppelin-contracts/", "info": {"exist": true, "topics": ["ethereum", "evm", "security", "smart-contracts", "solidity"], "langs": {"Solidity": 1339567, "JavaScript": 1293419, "Python": 170892, "Ruby": 95065, "Shell": 9308, "Makefile": 1714}, "avatar": "https://avatars.githubusercontent.com/u/20820676?v=4", "stargazers": 25643, "language": "Solidity"}}, "pocList": []}