{"cveId": "CVE-2022-49610", "cwe": [], "cvss": [], "references": ["https://git.kernel.org/stable/c/afd743f6dde87296c6f3414706964c491bb85862", "https://git.kernel.org/stable/c/07853adc29a058c5fd143c14e5ac528448a72ed9"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: VMX: Prevent RSB underflow before vmenter\n\nOn VMX, there are some balanced returns between the time the guest's\nSPEC_CTRL value is written, and the vmenter.\n\nBalanced returns (matched by a preceding call) are usually ok, but it's\nat least theoretically possible an NMI with a deep call stack could\nempty the RSB before one of the returns.\n\nFor maximum paranoia, don't allow *any* returns (balanced or otherwise)\nbetween the SPEC_CTRL write and the vmenter.\n\n  [ bp: Fix 32-bit build. ]"], "published": "2025-02-26T07:01:36.463", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}