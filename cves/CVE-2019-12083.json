{"cveId": "CVE-2019-12083", "cwe": ["CWE-125", "CWE-787", "CWE-125", "CWE-787"], "cvss": [{"baseScore": "8.1", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "High"}], "references": ["https://groups.google.com/forum/#!topic/rustlang-security-announcements/aZabeCMUv70", "https://blog.rust-lang.org/2019/05/13/Security-advisory.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/K6T4BNA5KQYJRIKIGGBOGBMR7TRXPHLR/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HG47HYH3AQTUMBUMX3S3G5DNAY4CBW6N/", "http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00076.html", "http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00006.html", "http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00031.html"], "description": ["The Rust Programming Language Standard Library 1.34.x before 1.34.2 contains a stabilized method which, if overridden, can violate Rust's safety guarantees and cause memory unsafety. If the `Error::type_id` method is overridden then any type can be safely cast to any other type, causing memory safety vulnerabilities in safe code (e.g., out-of-bounds write or read). Code that does not manually implement Error::type_id is unaffected."], "published": "2019-05-13T20:29:02.913", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["n/a"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}