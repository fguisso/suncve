{"cveId": "CVE-2022-24795", "cwe": ["CWE-122", "CWE-190", "CWE-122", "CWE-190"], "cvss": [{"baseScore": "5.9", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "High", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://github.com/brianmario/yajl-ruby/security/advisories/GHSA-jj47-x69x-mxrm", "https://github.com/brianmario/yajl-ruby/commit/7168bd79b888900aa94523301126f968a93eb3a6", "https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64", "https://lists.debian.org/debian-lts-announce/2023/07/msg00013.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KLE3C4CECEJ4EUYI56KXI6OWACWXX7WN/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YO32YDJ74DADC7CMJNLSLBVWN5EXGF5J/", "https://lists.debian.org/debian-lts-announce/2023/08/msg00003.html"], "description": ["yajl-ruby is a C binding to the YAJL JSON parsing and generation library. The 1.x branch and the 2.x branch of `yajl` contain an integer overflow which leads to subsequent heap memory corruption when dealing with large (~2GB) inputs. The reallocation logic at `yajl_buf.c#L64` may result in the `need` 32bit integer wrapping to 0 when `need` approaches a value of 0x80000000 (i.e. ~2GB of data), which results in a reallocation of buf->alloc into a small heap chunk. These integers are declared as `size_t` in the 2.x branch of `yajl`, which practically prevents the issue from triggering on 64bit platforms, however this does not preclude this issue triggering on 32bit builds on which `size_t` is a 32bit integer. Subsequent population of this under-allocated heap chunk is based on the original buffer size, leading to heap memory corruption. This vulnerability mostly impacts process availability. Maintainers believe exploitation for arbitrary code execution is unlikely. A patch is available and anticipated to be part of yajl-ruby version 1.4.2. As a workaround, avoid passing large inputs to YAJL."], "published": "2022-04-05T16:15:14.050", "state": "PUBLIC", "vendorName": ["brianmario"], "productName": ["yajl-ruby"], "github": {"advisories": ["https://github.com/brianmario/yajl-ruby/security/advisories/GHSA-jj47-x69x-mxrm"], "commits": ["https://github.com/brianmario/yajl-ruby/commit/7168bd79b888900aa94523301126f968a93eb3a6"], "pocAdvisorie": {}, "repo": "https://github.com/brianmario/yajl-ruby/", "info": {"exist": true, "topics": [], "langs": {"C": 172218, "Ruby": 93436, "Shell": 97}, "avatar": "https://avatars.githubusercontent.com/u/11571?v=4", "stargazers": 1487, "language": "C"}}, "pocList": []}