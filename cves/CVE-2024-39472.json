{"cveId": "CVE-2024-39472", "cwe": ["CWE-770", "CWE-770"], "cvss": [{"baseScore": "5.5", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://git.kernel.org/stable/c/f754591b17d0ee91c2b45fe9509d0cdc420527cb", "https://git.kernel.org/stable/c/57835c0e7152e36b03875dd6c56dfeed685c1b1f", "https://git.kernel.org/stable/c/c2389c074973aa94e34992e7f66dac0de37595b5", "https://git.kernel.org/stable/c/45cf976008ddef4a9c9a30310c9b4fb2a9a6602a"], "description": ["In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\n\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\n\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation."], "published": "2024-07-05T07:15:10.020", "state": "PUBLIC", "vendorName": ["Linux"], "productName": ["Linux"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}