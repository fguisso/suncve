{"cveId": "CVE-2018-14779", "cwe": ["CWE-119", "CWE-787", "CWE-119", "CWE-787"], "cvss": [{"baseScore": "7.2", "version": "2.0", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "None", "Scope": "None", "Confidentiality Impact": "Complete", "Integrity Impact": "Complete", "Availability Impact": "Complete"}], "references": ["https://www.yubico.com/support/security-advisories/ysa-2018-03/", "https://www.x41-dsec.de/lab/advisories/x41-2018-001-Yubico-Piv/", "http://www.openwall.com/lists/oss-security/2018/08/14/2", "https://usn.ubuntu.com/4276-1/"], "description": ["A buffer overflow issue was discovered in the Yubico-Piv 1.5.0 smartcard driver. The file lib/ykpiv.c contains the following code in the function `ykpiv_transfer_data()`: {% highlight c %} if(*out_len + recv_len - 2 > max_out) { fprintf(stderr, \"Output buffer to small, wanted to write %lu, max was %lu.\", *out_len + recv_len - 2, max_out); } if(out_data) { memcpy(out_data, data, recv_len - 2); out_data += recv_len - 2; *out_len += recv_len - 2; } {% endhighlight %} -- it is clearly checked whether the buffer is big enough to hold the data copied using `memcpy()`, but no error handling happens to avoid the `memcpy()` in such cases. This code path can be triggered with malicious data coming from a smartcard."], "published": "2018-08-15T18:29:00.747", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["n/a"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}