{"cveId": "CVE-2017-1000111", "cwe": ["CWE-787", "CWE-787"], "cvss": [{"baseScore": "7.8", "version": "3.1", "Attack Vector": "Low", "Attack Complexity": "Low", "Privileges Required": "Low", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "High", "Integrity Impact": "High", "Availability Impact": "High"}], "references": ["https://access.redhat.com/errata/RHSA-2017:3200", "http://www.securityfocus.com/bid/100267", "https://access.redhat.com/errata/RHSA-2017:2918", "https://access.redhat.com/errata/RHSA-2017:2931", "http://www.debian.org/security/2017/dsa-3981", "https://access.redhat.com/security/cve/cve-2017-1000111", "http://www.securitytracker.com/id/1039132", "https://access.redhat.com/errata/RHSA-2017:2930"], "description": ["Linux kernel: heap out-of-bounds in AF_PACKET sockets. This new issue is analogous to previously disclosed CVE-2016-8655. In both cases, a socket option that changes socket state may race with safety checks in packet_set_ring. Previously with PACKET_VERSION. This time with PACKET_RESERVE. The solution is similar: lock the socket for the update. This issue may be exploitable, we did not investigate further. As this issue affects PF_PACKET sockets, it requires CAP_NET_RAW in the process namespace. But note that with user namespaces enabled, any process can create a namespace in which it has CAP_NET_RAW."], "published": "2017-10-05T01:29:04.430", "state": "PUBLIC", "vendorName": ["n/a"], "productName": ["n/a"], "github": {"advisories": [], "commits": [], "pocAdvisorie": null, "repo": null, "info": {}}, "pocList": []}