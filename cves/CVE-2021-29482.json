{"cveId": "CVE-2021-29482", "cwe": ["CWE-835", "CWE-835"], "cvss": [{"baseScore": "7.5", "version": "3.1", "Attack Vector": "None", "Attack Complexity": "Low", "Privileges Required": "None", "User Interaction": "None", "Scope": "Unchaged", "Confidentiality Impact": "None", "Integrity Impact": "None", "Availability Impact": "High"}], "references": ["https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27", "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b"], "description": ["xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated."], "published": "2021-04-28T19:15:08.587", "state": "PUBLIC", "vendorName": ["ulikunitz"], "productName": ["xz"], "github": {"advisories": ["https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27"], "commits": ["https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b"], "pocAdvisorie": {}, "repo": "https://github.com/ulikunitz/xz/", "info": {"exist": true, "topics": ["compression", "decompression", "go", "xz"], "langs": {"Go": 1310083, "Shell": 160}, "avatar": "https://avatars.githubusercontent.com/u/8460565?v=4", "stargazers": 503, "language": "Go"}}, "pocList": []}